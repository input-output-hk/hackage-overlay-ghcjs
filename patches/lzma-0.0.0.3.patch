diff -ru a/lzma.cabal b/lzma.cabal
--- a/lzma.cabal	2016-10-24 09:52:21.000000000 +1300
+++ b/lzma.cabal	2022-02-18 02:53:14.000000000 +1300
@@ -1,5 +1,8 @@
+cabal-version:       >=1.10
 name:                lzma
 version:             0.0.0.3
+x-revision:          7
+
 synopsis:            LZMA/XZ compression and decompression
 homepage:            https://github.com/hvr/lzma
 bug-reports:         https://github.com/hvr/lzma/issues
@@ -11,8 +14,7 @@
 stability:           experimental
 category:            Codec, Compression
 build-type:          Simple
-cabal-version:       >=1.10
-tested-with:         GHC ==7.4.2, GHC ==7.6.3, GHC ==7.8.4, GHC ==7.10.3, GHC ==8.0.1, GHC ==8.0.2
+tested-with:         GHC ==7.4.2, GHC ==7.6.3, GHC ==7.8.4, GHC ==7.10.3, GHC ==8.0.2, GHC ==8.2.2, GHC ==8.4.4, GHC==8.6.5, GHC==8.8.4, GHC==8.10.7, GHC==9.0.1, GHC==9.2.1
 description:
     This package provides a pure interface for compressing and
     decompressing
@@ -28,6 +30,8 @@
     .
       * </package/pipes-lzma pipes-lzma> (for </package/pipes pipes>)
     .
+      * </package/lzma-conduit lzma-conduit> (for </package/conduit conduit>)
+    .
 
 extra-source-files:
   Changelog.md
@@ -44,16 +48,18 @@
   exposed-modules:     Codec.Compression.Lzma
   other-modules:       LibLzma
 
-  build-depends:       base       >=4.5    && <4.10
-                     , bytestring >=0.9.2  && <0.11
+  build-depends:       base       >=4.5    && <4.17
+                     , bytestring >=0.9.2  && <0.12
 
   if os(windows)
     build-depends:     lzma-clib
   else
     includes:          lzma.h
-    extra-libraries:   lzma
+    if !os(ghcjs)
+      extra-libraries:   lzma
 
-  c-sources:           cbits/lzma_wrapper.c
+  if !os(ghcjs)
+    c-sources:           cbits/lzma_wrapper.c
 
   ghc-options:         -Wall
 
@@ -70,10 +76,11 @@
                      , base
                      , bytestring
   -- additional dependencies that require version bounds
-  build-depends:       HUnit                      >= 1.2      && <1.4
-                     , QuickCheck                 >= 2.8      && <2.9
-                     , tasty                      >= 0.10     && <0.12
-                     , tasty-hunit                == 0.9.*
-                     , tasty-quickcheck           >= 0.8.3.2  && < 0.9
+  build-depends:       HUnit                      >= 1.2      && <1.7
+                     , QuickCheck                 >= 2.8      && <2.15
+                     , tasty                      >= 0.10     && <1.5
+                     , tasty-hunit                >= 0.9      && <0.11
+                     , tasty-quickcheck           >= 0.8.3.2  && <0.11
+                     , time
 
   ghc-options:         -Wall -threaded
diff -ru a/src/Codec/Compression/Lzma.hs b/src/Codec/Compression/Lzma.hs
--- a/src/Codec/Compression/Lzma.hs	2016-10-24 09:52:21.000000000 +1300
+++ b/src/Codec/Compression/Lzma.hs	2022-02-18 02:53:14.000000000 +1300
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP #-}
 {-# LANGUAGE BangPatterns #-}
 
 -- |
@@ -20,6 +21,7 @@
     , compressWith
     , decompressWith
 
+#if 0
       -- * Monadic incremental (de)compression API
       --
       -- | See <http://hackage.haskell.org/package/zlib-0.6.1.1/docs/Codec-Compression-Zlib-Internal.html#g:2 zlib's incremental API documentation> for more information.
@@ -34,6 +36,7 @@
     , decompressIO
     , decompressST
     , LzmaRet(..)
+#endif
 
       -- * Parameters
       -- ** Compression parameters
@@ -81,27 +84,7 @@
 --
 -- > decompressWith defaultDecompressParams { decompress... = ... }
 decompressWith :: DecompressParams -> BSL.ByteString -> BSL.ByteString
-decompressWith parms input = runST (decompress' input)
-  where
-    decompress' :: BSL.ByteString -> ST s BSL.ByteString
-    decompress' ibs0 = loop ibs0 =<< decompressST parms
-      where
-        loop BSL.Empty  (DecompressStreamEnd rest)
-          | BS.null rest = return BSL.Empty
-          | otherwise = fail "Codec.Compression.Lzma.decompressWith: trailing data"
-        loop (BSL.Chunk _ _) (DecompressStreamEnd _) =
-            fail "Codec.Compression.Lzma.decompressWith: trailing data"
-        loop _ (DecompressStreamError e) =
-            fail ("Codec.Compression.Lzma.decompressWith: decoding error " ++ show e)
-        loop BSL.Empty (DecompressInputRequired supply) =
-            loop BSL.Empty =<< supply BS.empty
-        loop (BSL.Chunk c bs') (DecompressInputRequired supply) =
-            loop bs' =<< supply c
-        loop ibs (DecompressOutputAvailable oc next) = do
-            obs <- loop ibs =<< next
-            return (BSL.chunk oc obs)
-
-{-# NOINLINE decompressWith #-}
+decompressWith _ = id
 
 ----------------------------------------------------------------------------
 ----------------------------------------------------------------------------
@@ -115,23 +98,9 @@
 --
 -- > compressWith defaultCompressParams { compress... = ... }
 compressWith :: CompressParams -> BSL.ByteString -> BSL.ByteString
-compressWith parms input = runST (compress' input)
-  where
-    compress' :: BSL.ByteString -> ST s BSL.ByteString
-    compress' ibs0 = loop ibs0 =<< compressST parms
-      where
-        loop BSL.Empty  CompressStreamEnd =
-            return BSL.Empty
-        loop (BSL.Chunk _ _) CompressStreamEnd =
-            fail "Codec.Compression.Lzma.compressWith: the impossible happened"
-        loop BSL.Empty (CompressInputRequired _ supply) =
-            loop BSL.Empty =<< supply BS.empty
-        loop (BSL.Chunk c bs') (CompressInputRequired _ supply) =
-            loop bs' =<< supply c
-        loop ibs (CompressOutputAvailable oc next) = do
-            obs <- loop ibs =<< next
-            return (BSL.chunk oc obs)
-{-# NOINLINE compressWith #-}
+compressWith _ = id
+
+#if 0
 
 --------------------------------------------------------------------------------
 --------------------------------------------------------------------------------
@@ -398,3 +367,5 @@
 -- | See <https://github.com/haskell/zlib/issues/7>
 noDuplicateST :: ST.Strict.ST s ()
 noDuplicateST = unsafeIOToST noDuplicate
+
+#endif
